1. Implement the Cateogry model and define the /categories/ endpoint.

 * curl -H "Content-Type:application/json" -X POST -d '{"name":"Fruits"}' "http://localhost:8000/api/v1/categories/"
 * curl -H "Content-Type:application/json" -X DELETE "http://localhost:8000/api/v1/categories/2/"
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/"
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/1/"
 * curl -H "Content-Type:application/json" -X PATCH -d '{"name":"Vegetables"}' "http://localhost:8000/api/v1/categories/1/"

2. Breakup the SimpleRouter entry for /categories/ and implement it manually.

 - url(r'^categories/$', CategoryViewSet, name='category-list')
 - url(r'^categories/$', CategoryViewSet.as_view(), name='category-list')
 - url(r'^categories/$', CategoryViewSet.as_view({'get':'list'}), name='category-list')

 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/"
 * curl -H "Content-Type:application/json" -X POST -d '{"name":"Fruits"}' "http://localhost:8000/api/v1/categories/"
 X {"detail":"Method \"POST\" not allowed."}

 - url(r'^categories/$', CategoryViewSet.as_view({'get':'list', 'post':'create'}), name='category-list')

 * curl -H "Content-Type:application/json" -X POST -d '{"name":"Fruits"}' "http://localhost:8000/api/v1/categories/"
 * curl -H "Content-Type:application/json" -X DELETE "http://localhost:8000/api/v1/categories/3/"
 X Page not found (404)

 - url(r'^categories/(?P<pk>[0-9]+)/$', CategoryViewSet.as_view({'delete':'destroy'}), name='category-detail')

 * curl -H "Content-Type:application/json" -X DELETE "http://localhost:8000/api/v1/categories/3/"
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/1/"
 X {"detail":"Method \"GET\" not allowed."}

 - url(r'^categories/(?P<pk>[0-9]+)/$', CategoryViewSet.as_view({'get':'retrieve', 'delete':'destroy'}), name='category-detail')

 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/1/"
 * curl -H "Content-Type:application/json" -X PATCH -d '{"name":"Meat"}' "http://localhost:8000/api/v1/categories/1/"
 X {"detail":"Method \"PATCH\" not allowed."}

 - url(r'^categories/(?P<pk>[0-9]+)/$', CategoryViewSet.as_view({'get':'retrieve', 'delete':'destroy', 'patch':'partial_update'}), name='category-detail')

 * curl -H "Content-Type:application/json" -X PATCH -d '{"name":"Meat"}' "http://localhost:8000/api/v1/categories/1/"

3. Create a Stat model and a /stats/ endpoint (Use ReadOnlyModelViewSet).

 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/stats/"

4. Update Stat whenever a Category is created. (Override `def create()`)

 * curl -H "Content-Type:application/json" -X POST -d '{"name":"Crockery"}' "http://localhost:8000/api/v1/categories/"
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/stats/"
   [{"id":1,"category_count":3}]

5. Update Stat whenever a Cateogry is deleted. (Override `def destroy()`)

 * curl -H "Content-Type:application/json" -X DELETE "http://localhost:8000/api/v1/categories/5/"
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/stats/"
   [{"id":1,"category_count":2}]

6. Add a `status` field to the Category model.

 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/"
   [{"id":1,"name":"Meat","status":1},{"id":4,"name":"Crockery","status":1},{"id":5,"name":"Cosmetics","status":1}]
 * curl -H "Content-Type:application/json" -X PATCH -d '{"status":0}' "http://localhost:8000/api/v1/categories/5/"
   {"id":5,"name":"Cosmetics","status":0}
 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/"
   [{"id":1,"name":"Meat","status":1},{"id":4,"name":"Crockery","status":1},{"id":5,"name":"Cosmetics","status":0}]

7. Only display categories with status 1. (Override `def get_queryset()`)

 * curl -H "Content-Type:application/json" -X GET "http://localhost:8000/api/v1/categories/"
   [{"id":1,"name":"Meat","status":1},{"id":4,"name":"Crockery","status":1}]

